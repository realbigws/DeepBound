#=================
DeepBound (v0.1)
date: 2017.01.15
#=================

Author: Sheng Wang, Jianzhu Ma, Mingfu Shao
Contact email: realbigws@gmail.com, majianzhu@gmail.com,  shaomingfu@gmail.com


#=================== Abstract =========================

Predict the boundary of transcript start and end from RNA-seq reads alignment, via AUC-Maximized DeepCNF model.


#=================== Install ==========================

1. download the package

git clone https://github.com/realbigws/DeepBound
cd DeepBound/

--------------

2. compile

cd source_code/
        make
cd ../

--------------

3. update the package

git pull


#=================== Oneline Command ==================

1. oneline command usage

Usage: ./oneline_command.sh <original_input> <output_folder>
[Note]:    <original_input> should be concatenated into one file
           <output_folder> shall contain output folders


2. oneline command example

./oneline_command.sh example/sample_test test_out/


#=================== format of original input =========

each sequence consists of 21 rows.

1. the initial row, starting with '#', is the header showing the comment or description of this sequence.

2. the first row below '#' header records the 'Start Mid End' label.
        If real-world data is applied, then just put any number here (e.g., 0);
        If for training purpose, then MUST set 0,1,2 for END, MID, and START, respectively.

3. the second row below '#' header records the positive abundance value.
        If real-world data is applied, then just put any number here (e.g., 0);
        If for training purpose, then MUST put a real positive value here to indicate the abundance value.

4. each data entry should have 21 lines in total, including the '#' header row, first boundary label row, and second abundance value row.
        The following 14 rows are the feature row, with the 1st row of them indicating the read coverage.
        The final 4 rows are the A,T,C,G sequence in 0/1 one-hot matrix format.


#=================== output files and folders =========

#-> input data list
1. sample_test_sample_list
   the file list shows the number of sequences in <original_input>, with the same order as in the original file.
   all following folders contain each sequence as a file with the same name as 'sample_x', where x is the order of sequence, starting from 0.

#-> output prediction
2. bou_pred_out/
   the predicted boundary


